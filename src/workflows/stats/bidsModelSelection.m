function bidsModelSelection(opt)
  %
  % Brief workflow description
  %
  % USAGE::
  %
  %  bidsModelSelection(opt)
  %
  % :param opt: structure or json filename containing the options. See
  %             ``checkOptions()`` and ``loadAndCheckOptions()``.
  % :type opt: structure
  %
  % (C) Copyright 2022 CPP_SPM developers

  [BIDS, opt] = setUpWorkflow(opt, 'workflow name');

  matlabbatch{1}.spm.tools.MACS.MA_model_space.dir = {output_dir};

  % matlabbatch{1}.spm.tools.MACS.MA_model_space.names = {
  %     'GLM_FD-whi-CSF'
  %     'GLM_trans-rot'
  %     'GLM_FD-whi-CSF-trans-rot'
  %     'GLM_FD-whi-CSF-trans-rot-tcomcor'}
  matlabbatch{1}.spm.tools.MACS.MA_model_space.names = {
                                                        'GLM_FD-whi-CSF'
                                                        'GLM_trans-rot'
                                                        'GLM_FD-whi-CSF-trans-rot'};

  for iSub = 1:numel(opt.subjects)

    subLabel = opt.subjects{iSub};

    subj_dir = fullfile(output_dir, [folder_subj{isubj}], 'func');

    for iGLM = 1:size(all_GLMs)

      analysis_dir = fullfile ( ...
                               output_dir, ...
                               folder_subj{isubj}, 'stats', analysis_dir);

      matlabbatch{1}.spm.tools.MACS.MA_model_space.models{1, isubj}{1, iGLM} = ...
          {fullfile(analysis_dir, 'SPM.mat')};

    end

    matlabbatch{2}.spm.tools.MACS.MA_cvLME_auto.MS_mat(1) = ...
     cfg_dep('MA: define model space: model space (MS.mat file)', ...
             substruct('.', 'val', '{}', {1}, ...
                       '.', 'val', '{}', {1}, ...
                       '.', 'val', '{}', {1}, ...
                       '.', 'val', '{}', {1}), ...
             substruct('.', 'MS_mat'));
    matlabbatch{2}.spm.tools.MACS.MA_cvLME_auto.AnC = 0;

    matlabbatch{3}.spm.tools.MACS.MS_PPs_group_auto.MS_mat(1) = ...
     cfg_dep('MA: define model space: model space (MS.mat file)', ...
             substruct('.', 'val', '{}', {1}, ...
                       '.', 'val', '{}', {1}, ...
                       '.', 'val', '{}', {1}, ...
                       '.', 'val', '{}', {1}), ...
             substruct('.', 'MS_mat'));
    matlabbatch{3}.spm.tools.MACS.MS_PPs_group_auto.LME_map = 'cvLME';

    matlabbatch{4}.spm.tools.MACS.MS_BMS_group_auto.MS_mat(1) = ...
     cfg_dep('MA: define model space: model space (MS.mat file)', ...
             substruct('.', 'val', '{}', {1}, ...
                       '.', 'val', '{}', {1}, ...
                       '.', 'val', '{}', {1}, ...
                       '.', 'val', '{}', {1}), ...
             substruct('.', 'MS_mat'));
    matlabbatch{4}.spm.tools.MACS.MS_BMS_group_auto.LME_map = 'cvLME';
    matlabbatch{4}.spm.tools.MACS.MS_BMS_group_auto.inf_meth = 'RFX-VB';
    matlabbatch{4}.spm.tools.MACS.MS_BMS_group_auto.EPs = 0;

    matlabbatch{5}.spm.tools.MACS.MS_SMM_BMS.BMS_mat(1) = ...
     cfg_dep('MS: perform BMS (automatic): BMS results (BMS.mat file)', ...
             substruct('.', 'val', '{}', {4}, ...
                       '.', 'val', '{}', {1}, ...
                       '.', 'val', '{}', {1}, ...
                       '.', 'val', '{}', {1}), ...
             substruct('.', 'BMS_mat'));
    matlabbatch{5}.spm.tools.MACS.MS_SMM_BMS.extent = 10;

    saveAndRunWorkflow(matlabbatch, 'workflow name', opt, subLabel);

  end

end
